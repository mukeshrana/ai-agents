# -*- coding: utf-8 -*-
"""Top10_news.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1VEXM3apolZbOYWwbyn_gcw9rAOGIGh9A
"""
# -------------------------
from crewai import Agent, Task
from crewai.tools import tool
from crewai.llm import LLM
from langchain_community.tools import DuckDuckGoSearchRun
from datetime import datetime
import os

Now = datetime.now()
Today = Now.strftime("%d-%b-%Y")

# content of test_sample.py
def func(x):
    return x + 1

# -------------------------
@tool("DuckDuckGo Search")
def search_tool(search_query: str):
  """Search the internet for the information on given topic"""
  return DuckDuckGoSearchRun().run(search_query)

# -------------------------
from crewai import Agent, LLM

os.environ['OPENROUTER_API_KEY'] = "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"
llm = LLM(
    model="openrouter/deepseek/deepseek-r1",
    base_url="https://openrouter.ai/api/v1",
    api_key="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"
)

content_explorer = Agent (
    role = 'content explorer',
    goal = 'gather and provide information about the topic',
    llm = llm,
    verbose = True,
    backstory = ('You are an expert research who can gather detailed information about a topic.\
                Gather at least 10 information. consider you are on : ' + Today),
    tools = [search_tool],
    cache = True,
    max_iter =5
)

# -------------------------
from crewai import Task

get_details = Task (
    description = "Get latest, trending and interesting information and news about {topic}",
    expected_output = "Latest, trending and interesting information and news about {topic}",
    agent = content_explorer
)

# -------------------------
from crewai import Crew, Process
from datetime import datetime

def timestamp(Input):
  print(datetime.now())

crew = Crew (
    agents = [content_explorer],
    tasks = [get_details],
    verbose = True,
    Process = Process.sequential,
    step_callback = timestamp
)

# -------------------------
result = crew.kickoff (inputs = {'topic' : "IPL Playoffs"})
